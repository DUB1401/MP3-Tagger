from dublib.Methods import RemoveFolderContent

import os

class Temper:
	"""Дескриптор каталога временных файлов."""

	#==========================================================================================#
	# >>>>> СВОЙСТВА ТОЛЬКО ДЛЯ ЧТЕНИЯ <<<<< #
	#==========================================================================================#

	@property
	def path(self) -> list[str]:
		"""Путь к корню каталога временных файлов."""

		# Если каталог не существует, создать его.
		if not os.path.exists(self.__Temp): os.makedirs(self.__Temp)

		return self.__Temp

	#==========================================================================================#
	# >>>>> МЕТОДЫ <<<<< #
	#==========================================================================================#

	def __init__(self):
		"""Дескриптор каталога временных файлов."""

		#---> Генерация динамических свойств.
		#==========================================================================================#
		# Путь к корню каталога временных файлов.
		self.__Temp = "Temp"

	def clear_parser_temp(self, parser_name: str):
		"""
		Очищает выделенный для конкретного парсера каталог временных файлов.
			parser_name – название парсера.
		"""

		# Путь к каталогу. 
		Path = f"{self.__Temp}/{parser_name}"
		# Если каталог существует, очистить его.
		if os.path.exists(Path): RemoveFolderContent(Path)

	def get_parser_temp(self, parser_name: str) -> str:
		"""
		Возвращает путь к выделенному для конкретного парсера каталогу временных файлов.
			parser_name – название парсера.
		"""

		# Путь к каталогу. 
		Path = f"{self.__Temp}/{parser_name}"
		# Если каталог не существует, создать его.
		if not os.path.exists(Path): os.makedirs(Path)

		return Path